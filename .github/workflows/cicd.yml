name: CI/CD for Dockerized Flask App

# This workflow runs when there is a push or pull request to the 'main' branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    # This job runs on the latest Ubuntu runner
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python 3.9
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install required Python packages
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask
          pip install pytest

      # Step 4: Run unit tests using pytest
      - name: Run tests
        run: pytest

  build-and-publish:
    # This job depends on the success of the build-and-test job
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code again for this job
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker BuildX for advanced Docker build features
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to DockerHub using GitHub Secrets
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build the Docker image and push it to DockerHub
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

      # Step 5: Output the image digest (unique identifier of the built image)
      - name: Show image digest
        run: echo ${{ steps.build-and-push.outputs.digest }}
